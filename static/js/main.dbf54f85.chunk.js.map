{"version":3,"sources":["components/Container/styles.tsx","components/Container/index.tsx","components/Sparkline/styles.tsx","components/Sparkline/index.tsx","components/StockTable/styles.tsx","components/StockTable/index.tsx","types/ActionType.ts","containers/Dashboard.tsx","App.tsx","redux/reducers/index.ts","redux/sagas/index.ts","redux/actions/index.ts","redux/store.ts","index.tsx"],"names":["makeStyles","theme","root","display","list","width","grow","flexGrow","menuButton","marginRight","breakpoints","up","content","padding","spacing","toolbar","mixins","Container","children","status","classes","useStyles","React","useState","visible","setVisible","handleToggleDrawer","event","appBar","Toolbar","IconButton","color","aria-label","onClick","Typography","variant","className","process","AppBar","position","Drawer","open","onClose","role","List","ListItem","ListItemIcon","ListItemText","primary","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","Sparkline","data","onCancel","chartData","prices","map","price","index","x","y","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","name","toUpperCase","VictoryTheme","material","StyledTableCell","withStyles","head","common","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","raise","success","dark","fontWeight","fall","error","normal","stockName","textTransform","defaultChartData","ActionType","StockTable","stockData","stockTypes","setChartData","chartVisible","setChartVisible","rowData","type","number","currentPrice","length","lastPrice","updateDate","createRow","handleToggleChart","TableContainer","component","Paper","Table","TableHead","align","TableBody","row","key","moment","fromNow","connect","connected","App","path","initialState","applicationState","state","WEBSOCKET_OPENED","WEBSOCKET_CLOSED","WEBSOCKET_ERROR","WEBSOCKET_RECEIVE","payload","forEach","stock","stockPrice","existingStock","push","shift","Object","keys","createWebsocketChannel","ws","eventChannel","emitter","addEventListener","message","JSON","parse","close","ReconnectingWebSocket","call","wsChannel","take","put","store","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","sagas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbf54f85.chunk.js","sourcesContent":["import { makeStyles, Theme } from '@material-ui/core/styles'\n\nexport default makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n  },\n\n  list: {\n    width: 250,\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n\n  toolbar: theme.mixins.toolbar,\n}))\n","import React from 'react'\nimport {\n  AppBar,\n  Toolbar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport useStyles from './styles'\n\ninterface ContainerProps {\n  status: boolean\n  children: React.ReactNode\n}\n\nexport const Container: React.FC<ContainerProps> = ({ children, status }) => {\n  const classes = useStyles()\n\n  const [visible, setVisible] = React.useState(false)\n\n  const handleToggleDrawer = (event: any) => {\n    setVisible(!visible)\n  }\n\n  const handleNavigate = () => {}\n\n  const appBar = (\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={handleToggleDrawer}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n        {process.env.REACT_APP_TITLE}\n      </Typography>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        {status ? 'Websocket Connected' : 'Connectiong Websocket...'}\n      </Typography>\n    </Toolbar>\n  )\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">{appBar}</AppBar>\n\n      <Drawer open={visible} onClose={handleToggleDrawer}>\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={handleToggleDrawer}\n        >\n          <List>\n            <ListItem onClick={handleNavigate}>\n              <ListItemIcon>{<DashboardIcon />}</ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  )\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles'\n\nexport default makeStyles((theme: Theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #634',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n","import React from 'react'\nimport { Modal, Backdrop, Fade } from '@material-ui/core'\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory'\nimport { ChartData } from '../StockTable'\n\nimport useStyles from './styles'\n\ninterface SparklineProps {\n  visible: boolean\n  data: ChartData\n  onCancel: any\n}\n\nexport const Sparkline: React.FC<SparklineProps> = ({\n  visible,\n  data,\n  onCancel,\n}) => {\n  const classes = useStyles()\n\n  const chartData = data.prices.map((price: number, index: number) => ({\n    x: index,\n    y: price,\n  }))\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={visible}\n      onClose={onCancel}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={visible}>\n        <div className={classes.paper}>\n          <h2 id=\"transition-modal-title\">\n            Sparklines of [{data.name.toUpperCase()}]\n          </h2>\n\n          <VictoryChart theme={VictoryTheme.material}>\n            <VictoryLine data={chartData} />\n          </VictoryChart>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n","import { makeStyles, withStyles, Theme } from '@material-ui/core/styles'\nimport { TableCell, TableRow } from '@material-ui/core'\n\nconst StyledTableCell = withStyles((theme: Theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme: Theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow)\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    minWidth: 400,\n  },\n\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n\n  raise: {\n    color: theme.palette.success.dark,\n    fontWeight: 'bold',\n  },\n\n  fall: {\n    color: theme.palette.error.dark,\n    fontWeight: 'bold',\n  },\n\n  normal: {\n    fontWeight: 'bold',\n  },\n\n  stockName: {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n}))\n\nexport { useStyles, StyledTableRow, StyledTableCell }\n","import React, { useState } from 'react'\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport { Sparkline } from '../Sparkline'\n\nimport moment from 'moment'\n\nimport { StockData } from '../../redux/reducers'\n\nimport { useStyles, StyledTableRow, StyledTableCell } from './styles'\n\ninterface StockInfo {\n  number: number\n  name: string\n  currentPrice: string | number\n  lastPrice: string | number\n  updateDate: object\n  status: 0 | 1 | -1 // 0: same price, 1: risen, -1: fallen\n}\n\nexport interface ChartData {\n  name: string\n  prices: number[]\n}\n\nconst defaultChartData: ChartData = {\n  name: '',\n  prices: [],\n}\n\ninterface TableProps {\n  stockData: any\n  stockTypes: string[]\n}\n\ninterface TableStates {\n  chartData: ChartData\n  chartVisible: boolean\n}\n\nfunction createRow(\n  index: number,\n  type: string,\n  stockData: StockData,\n): StockInfo {\n  return {\n    number: index + 1,\n    name: type,\n    currentPrice: stockData.prices[stockData.prices.length - 1],\n    lastPrice:\n      stockData.prices.length > 2\n        ? stockData.prices[stockData.prices.length - 2]\n        : '-',\n    updateDate: stockData.updateDate,\n    status: stockData.status,\n  }\n}\n\nexport const StockTable: React.FC<TableProps> = ({ stockData, stockTypes }) => {\n  const classes = useStyles()\n  const [chartData, setChartData] = useState(defaultChartData)\n  const [chartVisible, setChartVisible] = useState(false)\n\n  const rowData: StockInfo[] = stockTypes.map((type, index) =>\n    createRow(index, type, stockData[type]),\n  )\n\n  const handleToggleChart = (name: string | null) => () => {\n    if (!name) {\n      setChartVisible(false)\n      return\n    }\n\n    setChartData({\n      name,\n      prices: stockData[name].prices,\n    })\n    setChartVisible(!chartVisible)\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"stock table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Number</StyledTableCell>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Last Price</StyledTableCell>\n            <StyledTableCell align=\"right\">Price</StyledTableCell>\n            <StyledTableCell align=\"right\">Last Update</StyledTableCell>\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {stockTypes.length > 0 &&\n            rowData.map((row: StockInfo) => (\n              <StyledTableRow key={row.number}>\n                <StyledTableCell>{row.number}</StyledTableCell>\n\n                <StyledTableCell>\n                  <Typography className={classes.stockName}>\n                    {row.name}\n                  </Typography>\n                </StyledTableCell>\n\n                <StyledTableCell align=\"right\">{row.lastPrice}</StyledTableCell>\n\n                <StyledTableCell\n                  align=\"right\"\n                  className={\n                    row.status === 1\n                      ? classes.raise\n                      : row.status === -1\n                      ? classes.fall\n                      : classes.normal\n                  }\n                >\n                  {row.currentPrice}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"right\">\n                  {moment(row.updateDate).fromNow()}\n                </StyledTableCell>\n\n                <StyledTableCell align=\"right\">\n                  <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Show Chart\"\n                    onClick={handleToggleChart(row.name)}\n                  >\n                    <TimelineIcon />\n                  </IconButton>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n        </TableBody>\n      </Table>\n\n      <Sparkline\n        visible={chartVisible}\n        data={chartData}\n        onCancel={handleToggleChart(null)}\n      />\n    </TableContainer>\n  )\n}\n","// Define your Redux actions here.\n// e.g. ACTION = \"action\" (string is required)\nexport enum ActionType {\n  WEBSOCKET_OPENED = 'WEBSOCKET_OPENED',\n  WEBSOCKET_CLOSED = 'WEBSOCKET_CLOSED',\n  WEBSOCKET_RECEIVE = 'WEBSOCKET_RECEIVED',\n  WEBSOCKET_ERROR = 'WEBSOCKET_ERROR',\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { Container } from '../components/Container'\nimport { StockTable } from '../components/StockTable'\n\nimport { StateType } from '../redux/reducers'\n\nconst Dashboard: React.FC<StateType> = ({\n  connected,\n  stockData,\n  stockTypes,\n}: StateType) => (\n  <Container status={connected}>\n    <StockTable stockData={stockData} stockTypes={stockTypes} />\n  </Container>\n)\n\nconst mapStateToProps = ({ connected, stockData, stockTypes }: StateType) => ({\n  connected,\n  stockData,\n  stockTypes,\n})\n\nexport default connect(mapStateToProps)(Dashboard)\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Dashboard from './containers/Dashboard'\nimport './App.scss'\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import { Store } from 'redux'\nimport { ActionType } from '../../types/ActionType'\nimport { ActionModel } from '../../types/Models'\nimport moment from 'moment'\n\nexport interface StockData {\n  prices: number[]\n  updateDate: object\n  status: 0 | 1 | -1 // 0: same price, 1: risen, -1: fallen\n}\n\nexport interface StateType {\n  connected: boolean\n  stockData: any\n  stockTypes: string[]\n}\n\nlet initialState: StateType = {\n  connected: false,\n  stockData: {},\n  stockTypes: [],\n}\n\nexport type StoreType = Store<StateType, ActionModel>\n\nfunction applicationState(state = initialState, action: ActionModel) {\n  switch (action.type) {\n    case ActionType.WEBSOCKET_OPENED:\n      return { ...state, connected: true }\n\n    case ActionType.WEBSOCKET_CLOSED:\n    case ActionType.WEBSOCKET_ERROR:\n      return { ...state, connected: false }\n\n    case ActionType.WEBSOCKET_RECEIVE:\n      let { stockData, stockTypes } = state\n      const { payload } = action\n\n      payload.forEach((stock: any[]) => {\n        const stockName = stock[0]\n        const stockPrice = stock[1]\n        const existingStock: StockData = stockData[stockName]\n\n        if (existingStock) {\n          const lastPrice =\n            existingStock.prices[existingStock.prices.length - 1]\n          existingStock.prices.push(stockPrice)\n          existingStock.status =\n            stockPrice > lastPrice ? 1 : stockPrice < lastPrice ? -1 : 0\n          existingStock.updateDate = moment()\n\n          if (existingStock.prices.length > 20) {\n            // Keep last 20 data\n            existingStock.prices.shift()\n          }\n        } else {\n          stockData[stockName] = {\n            prices: [stockPrice],\n            status: 0,\n            updateDate: moment(),\n          }\n        }\n      })\n\n      stockTypes = Object.keys(stockData)\n\n      return { ...state, stockData, stockTypes }\n    default:\n      return state\n  }\n}\n\nexport default applicationState\n","import { eventChannel } from 'redux-saga'\nimport { take, call, put } from 'redux-saga/effects'\nimport ReconnectingWebSocket from 'reconnecting-websocket'\n\nimport {\n  websocketOpened,\n  websocketClosed,\n  stockDataReceived,\n  websocketErrorThrown,\n} from '../actions'\n\nconst createWebsocketChannel = (ws: ReconnectingWebSocket) =>\n  eventChannel((emitter) => {\n    ws.addEventListener('message', (message) => {\n      emitter(stockDataReceived(JSON.parse(message.data)))\n    })\n\n    ws.addEventListener('open', () => {\n      emitter(websocketOpened())\n    })\n\n    ws.addEventListener('error', () => {\n      emitter(websocketErrorThrown())\n    })\n\n    ws.addEventListener('close', () => {\n      emitter(websocketClosed())\n    })\n\n    return () => ws.close()\n  })\n\nexport default function* root() {\n  const url: string = process.env.REACT_APP_WS_URL\n  const ws = new ReconnectingWebSocket(url)\n  const wsChannel = yield call(createWebsocketChannel, ws)\n\n  while (true) {\n    const action = yield take(wsChannel)\n    yield put(action)\n  }\n}\n","import { ActionModel } from '../../types/Models'\nimport { ActionType } from '../../types/ActionType'\n\nexport function websocketOpened(): ActionModel {\n  return { type: ActionType.WEBSOCKET_OPENED, payload: null }\n}\n\nexport function websocketClosed(): ActionModel {\n  return { type: ActionType.WEBSOCKET_CLOSED, payload: null }\n}\n\nexport function websocketErrorThrown(): ActionModel {\n  return { type: ActionType.WEBSOCKET_ERROR, payload: null }\n}\n\nexport function stockDataReceived(payload: any[]): ActionModel {\n  return { type: ActionType.WEBSOCKET_RECEIVE, payload }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducers, { StoreType } from './reducers'\nimport sagas from './sagas'\n\nconst newStore = (): StoreType => {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(reducers, applyMiddleware(sagaMiddleware))\n\n  sagaMiddleware.run(sagas)\n\n  return store\n}\n\nexport default newStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport createStore from './redux/store'\n\nconst store = createStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}